name: C/C++ CI

on:
  push:
    branches: [ "master", "CI", "actions"]
    paths-ignore: ['md-help/**']
  pull_request:
    branches: [ "master", "CI", "actions"]
    paths-ignore: ['md-help/**', 'Help-files/**']

jobs:
  Linux-Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install PureData
      run: sudo apt-get install puredata -y

    - name: Download pd-Sources
      run: |
        curl -L -o pure-data.zip https://github.com/pure-data/pure-data/archive/refs/tags/0.56-0test1.zip
        unzip pure-data.zip
        rm pure-data.zip
        mv pure-data-* pure-data

    - name: Build pd-cyclone
      run: | 
        make install PDINCLUDEDIR=./pure-data/src PDLIBDIR=./pd-cyclone extension=l_amd64
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cyclone-linux
        path: ./pd-cyclone/cyclone/*

  Linux-ARM64-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Dockerfile
        run: |
          cat <<'EOF' > Dockerfile
          FROM arm64v8/debian:bullseye
          RUN apt-get update && apt-get install -y \
              build-essential \
              puredata \
              curl \
              unzip \
              make
          WORKDIR /build
          COPY . .
          RUN PD_URL=https://github.com/pure-data/pure-data/archive/refs/tags/0.56-0test1.zip && \
              curl -L -o pure-data.zip $PD_URL && \
              unzip pure-data.zip && \
              rm pure-data.zip && \
              mv pure-data-* pure-data
          RUN make install PDINCLUDEDIR=./pure-data/src PDLIBDIR=./pd-cyclone extension=l_arm64
          EOF

      - name: Build Docker image and extract artifacts
        run: |
          docker buildx build --platform linux/arm64 -t pd-cyclone-arm64 . --load
          container_id=$(docker create pd-cyclone-arm64)
          docker cp "$container_id":/build/pd-cyclone ./pd-cyclone-arm64
          docker rm "$container_id"

      - name: Upload ARM64 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cyclone-linux-arm64
          path: ./pd-cyclone-arm64

  Windows-Build:
    runs-on: windows-latest
    timeout-minutes: 25
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: "Install mingw deps"
      uses: msys2/setup-msys2@v2
      with:
        install: make mingw-w64-x86_64-gcc mingw64/mingw-w64-x86_64-ntldd-git mingw-w64-x86_64-fluidsynth mingw64/mingw-w64-x86_64-cmake unzip curl
        update: false

    - name: Get Pd
      shell: msys2 {0}
      run: | 
        curl -L -o pure-data.zip http://msp.ucsd.edu/Software/pd-0.56-0test1.msw.zip
        unzip pure-data.zip
        rm pure-data.zip
        rename pd-0.56-0test1 pure-data pd-0.56-0test1

    - name: Build pd-cyclone
      shell: msys2 {0}
      run: |
        make install PDDIR=./pure-data PDLIBDIR=./pd-cyclone extension=m_amd64
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cyclone-windows
        path: ./pd-cyclone/cyclone/*

  Mac-Intel:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Downloads pd sources
      run: |
        curl -L -o pure-data.zip https://github.com/pure-data/pure-data/archive/refs/tags/0.56-0test1.zip
        unzip pure-data.zip
        rm pure-data.zip
        mv pure-data-* pure-data

    - name: Build pd-cyclone
      run: |
        make install PDLIBDIR=./pd-cyclone extension=d_amd64 PDINCLUDEDIR=./pure-data/src
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cyclone-mac-intel
        path: ./pd-cyclone/cyclone/*

  Mac-ARM:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Downloads pd sources
      run: |
        curl -L -o pure-data.zip https://github.com/pure-data/pure-data/archive/refs/tags/0.56-0test1.zip
        unzip pure-data.zip
        rm pure-data.zip
        mv pure-data-* pure-data

    - name: Build pd-cyclone
      run: |
        make install PDLIBDIR=./pd-cyclone extension=d_amd64 PDINCLUDEDIR=./pure-data/src
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cyclone-mac-arm
        path: ./pd-cyclone/cyclone/*
